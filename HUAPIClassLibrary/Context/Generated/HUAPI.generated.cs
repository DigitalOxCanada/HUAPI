//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor
//     https://github.com/msawczyn/EFDesigner
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace HUAPIClassLibrary
{
   public partial class HUAPI : Microsoft.EntityFrameworkCore.DbContext
   {
      public Microsoft.EntityFrameworkCore.DbSet<HUAPIClassLibrary.CustomSetting> CustomSettings { get; set; }
      public Microsoft.EntityFrameworkCore.DbSet<HUAPIClassLibrary.Def> Defs { get; set; }
      public Microsoft.EntityFrameworkCore.DbSet<HUAPIClassLibrary.FWLink> FWLink { get; set; }
      public Microsoft.EntityFrameworkCore.DbSet<HUAPIClassLibrary.ScrapeQuery> ScrapeQuery { get; set; }
      public Microsoft.EntityFrameworkCore.DbSet<HUAPIClassLibrary.SMSCarrier> SMSCarriers { get; set; }
      public Microsoft.EntityFrameworkCore.DbSet<HUAPIClassLibrary.StreetType> StreetTypes { get; set; }

      public HUAPI() : base()
      {
      }

      public HUAPI(DbContextOptions<HUAPI> options) : base(options)
      {
      }

      partial void CustomInit(DbContextOptionsBuilder optionsBuilder);

      protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
      {
         CustomInit(optionsBuilder);
      }

      partial void OnModelCreatingImpl(ModelBuilder modelBuilder);
      partial void OnModelCreatedImpl(ModelBuilder modelBuilder);

      protected override void OnModelCreating(ModelBuilder modelBuilder)
      {
         base.OnModelCreating(modelBuilder);
         OnModelCreatingImpl(modelBuilder);

         modelBuilder.HasDefaultSchema("dbo");

         modelBuilder.Entity<HUAPIClassLibrary.CustomSetting>()
                     .ToTable("CustomSettings")
                     .HasKey(t => t.Id);
         modelBuilder.Entity<HUAPIClassLibrary.CustomSetting>()
                     .Property(t => t.Id)
                     .IsRequired()
                     .ValueGeneratedOnAdd();

         modelBuilder.Entity<HUAPIClassLibrary.Def>()
                     .ToTable("Defs")
                     .HasKey(t => t.Id);
         modelBuilder.Entity<HUAPIClassLibrary.Def>()
                     .Property(t => t.Id)
                     .IsRequired();
         modelBuilder.Entity<HUAPIClassLibrary.Def>()
                     .Property(t => t.Rule)
                     .IsRequired();
         modelBuilder.Entity<HUAPIClassLibrary.Def>()
                     .Property(t => t.SearchFor)
                     .IsRequired();
         modelBuilder.Entity<HUAPIClassLibrary.Def>()
                     .Property(t => t.ReplaceWith)
                     .IsRequired();

         modelBuilder.Entity<HUAPIClassLibrary.FWLink>()
                     .ToTable("FWLink")
                     .HasKey(t => t.Id);
         modelBuilder.Entity<HUAPIClassLibrary.FWLink>()
                     .Property(t => t.Id)
                     .IsRequired()
                     .ValueGeneratedOnAdd();

         modelBuilder.Entity<HUAPIClassLibrary.ScrapeQuery>()
                     .ToTable("ScrapeQuery")
                     .HasKey(t => t.Id);
         modelBuilder.Entity<HUAPIClassLibrary.ScrapeQuery>()
                     .Property(t => t.Id)
                     .IsRequired()
                     .ValueGeneratedOnAdd();
         modelBuilder.Entity<HUAPIClassLibrary.ScrapeQuery>()
                     .Property(t => t.DocType)
                     .IsRequired();
         modelBuilder.Entity<HUAPIClassLibrary.ScrapeQuery>()
                     .Property(t => t.FormName)
                     .IsRequired();
         modelBuilder.Entity<HUAPIClassLibrary.ScrapeQuery>()
                     .Property(t => t.Group)
                     .IsRequired();
         modelBuilder.Entity<HUAPIClassLibrary.ScrapeQuery>()
                     .Property(t => t.Created)
                     .IsRequired();
         modelBuilder.Entity<HUAPIClassLibrary.ScrapeQuery>()
                     .Property(t => t.IsActive)
                     .IsRequired();
         modelBuilder.Entity<HUAPIClassLibrary.ScrapeQuery>()
                     .Property(t => t.DropQ)
                     .IsRequired();
         modelBuilder.Entity<HUAPIClassLibrary.ScrapeQuery>()
                     .Property(t => t.CreateQ)
                     .IsRequired();
         modelBuilder.Entity<HUAPIClassLibrary.ScrapeQuery>()
                     .Property(t => t.SelectQ)
                     .IsRequired();
         modelBuilder.Entity<HUAPIClassLibrary.ScrapeQuery>()
                     .Property(t => t.Order)
                     .IsRequired();

         modelBuilder.Entity<HUAPIClassLibrary.SMSCarrier>()
                     .ToTable("SMSCarriers")
                     .HasKey(t => t.Id);
         modelBuilder.Entity<HUAPIClassLibrary.SMSCarrier>()
                     .Property(t => t.Id)
                     .IsRequired();

         modelBuilder.Entity<HUAPIClassLibrary.StreetType>()
                     .ToTable("StreetTypes")
                     .HasKey(t => t.Id);
         modelBuilder.Entity<HUAPIClassLibrary.StreetType>()
                     .Property(t => t.Id)
                     .IsRequired();
         modelBuilder.Entity<HUAPIClassLibrary.StreetType>()
                     .Property(t => t.Type)
                     .IsRequired();
         modelBuilder.Entity<HUAPIClassLibrary.StreetType>()
                     .Property(t => t.Code)
                     .IsRequired();

         OnModelCreatedImpl(modelBuilder);
      }
   }
}
