@page
@model HUAPICore.Pages.PasswordGenModel
@{
    ViewData["Title"] = "PasswordGen";
}
<style>
    #custom-handle {
        width: 3em;
        height: 1.6em;
        top: 50%;
        margin-top: -.8em;
        text-align: center;
        line-height: 1.6em;
    }
</style>
<h2>PasswordGen</h2>

<div class="container">

    <form>
        <div class="checkbox">
            <label>
                <ejs-checkbox id="ConsecutiveChars" label="Consecutive characters?"></ejs-checkbox>
            </label>
        </div>
        <div class="checkbox">
            <label>
                <ejs-checkbox id="RepeatingChars" label="Repeating characters?"></ejs-checkbox>
            </label>
        </div>
        <div class="form-group">
            Maximum size: (10-50)&nbsp;&nbsp;&nbsp;&nbsp;
            <input type="text" id="maxsize" value="10" readonly style="border:0; color:#f6931f; font-weight:bold;">
            <div id="sl1">
                <div id="custom-handle" class="ui-slider-handle"></div>
            </div>
        </div>

        <div class="form-group form-inline">
            <label for="ExcludeChars">Exclude these characters: </label>
            <input type="text" class="form-control" id="ExcludeChars" placeholder="">
        </div>
        <div class="checkbox">
            <label>
                <ejs-checkbox id="ExcludeSymbols" label="Exclude Symbols?"></ejs-checkbox>
            </label>
        </div>

        <button type="button" class="btn btn-default" onclick="GeneratePassword();">Generate</button>
    </form>
    <div id="results"></div>

</div>

@section Scripts {
<script>
        function isCheckedById(id) {
            var checked = $("input[id=" + id + "]:checked").length;

            if (checked === 0) {
                return false;
            } else {
                return true;
            }
        }

        function GeneratePassword() {
            var url = "/api/v1/passwordgen/generate";

            var pdata = {};
            pdata.Exclusions = $('#ExcludeChars').val();
            pdata.Maximum = parseInt($('#maxsize').val());
            pdata.ConsecutiveCharacters = isCheckedById('ConsecutiveChars');
            pdata.RepeatCharacters = isCheckedById('RepeatingChars');
            pdata.ExcludeSymbols = isCheckedById('ExcludeSymbols');
            $('#results').html('');

            $.ajax({
                type: "POST",
                url: url,
                cache: false,
                data: JSON.stringify(pdata),
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $.each(data, function (key, value) {
                        $('#results').append(value + "<br/>");
                    });
                },
                error: function (err) {
                    if (!err.success) {
                        alert(JSON.stringify(err));
                    }
                }
            });

        }

        $(function () {
            var handle = $("#custom-handle");
            $('#sl1').slider({
                create: function () {
                    handle.text($(this).slider("value"));
                },
                slide: function (event, ui) {
                    handle.text(ui.value);
                    $("#maxsize").val(ui.value);
                },
                min: 10,
                max: 50,
                step: 1,
                formater: function (value) {
                    return 'Max size: ' + value;
                }
            });
        });

</script>
}